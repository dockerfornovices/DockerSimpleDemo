# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Docker.gitlab-ci.yml

# Build a Docker image with CI/CD and push to the GitLab registry.
# Docker-in-Docker documentation: https://docs.gitlab.com/ee/ci/docker/using_docker_build.html

# See also https://stackoverflow.com/questions/45517733/how-to-publish-docker-images-to-docker-hub-from-gitlab-ci

.build-template: &build-template
  stage: build
  image: docker:latest
  services:
    - docker:dind
  rules:
     - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
       changes:
       - ${DOCKER_BUILD_CONTEXT}/${DOCKERFILE}
       - .gitlab-ci.yml
  before_script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin "$CI_REGISTRY"
  script:
    - echo Building Image $CI_REGISTRY_IMAGE
    - echo docker image build --pull --tag "${CI_REGISTRY_IMAGE}:${DEFAULT_TAG}" -f ${DOCKER_BUILD_CONTEXT}/${DOCKERFILE} ${DOCKER_BUILD_CONTEXT}
    - docker image build --pull --tag "${CI_REGISTRY_IMAGE}:${DEFAULT_TAG}" -f ${DOCKER_BUILD_CONTEXT}/${DOCKERFILE} ${DOCKER_BUILD_CONTEXT}
    - docker image tag "${CI_REGISTRY_IMAGE}:${DEFAULT_TAG}" "${CI_REGISTRY_IMAGE}:latest"
    - docker image push --all-tags "$CI_REGISTRY_IMAGE"

docker-build-figlet:
  variables:
    CI_REGISTRY_IMAGE: '$CI_REGISTRY/dockerfornovices/figlet'
    DEFAULT_TAG: "1.0"
    DOCKER_BUILD_CONTEXT: "Figlet"
    DOCKERFILE: "Dockerfile"
  <<: *build-template

docker-build-api-server:
  variables:
    CI_REGISTRY_IMAGE: '$CI_REGISTRY/dockerfornovices/api-server'
    GO_VERSION: "1.14"
    DEFAULT_TAG: ${GO_VERSION}
    BUILD_ARGS: '--build-arg GO_VERSION=$GO_VERSION'
    DOCKERFILE: "Dockerfile"
    DOCKER_BUILD_CONTEXT: FileSetA
  <<: *build-template

docker-build-sqlite:
  variables:
    CI_REGISTRY_IMAGE: '$CI_REGISTRY/dockerfornovices/sqlite'
    DEFAULT_TAG: "0.1"
    DOCKERFILE: "sqlite3.dockerfile"
    DOCKER_BUILD_CONTEXT: FileSetC
  <<: *build-template 

docker-build-lua-dev:
  variables:
    CI_REGISTRY_IMAGE: '$CI_REGISTRY/dockerfornovices/luadev'
    DEFAULT_TAG: "0.1"
    DOCKERFILE: "lua.dockerfile"
    DOCKER_BUILD_CONTEXT: FileSetD
  <<: *build-template

docker-build-counter:
  variables:
    CI_REGISTRY_IMAGE: '$CI_REGISTRY/dockerfornovices/counter'
    DEFAULT_TAG: "0.1"
  stage: build
  image: docker:latest
  services:
  - docker:dind
  rules:
  - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    changes:
    - .gitlab-ci.yml
  before_script:
  - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin "$CI_REGISTRY"
  script:
  - echo Building Image $CI_REGISTRY_IMAGE
  - |
    docker image build --pull --tag "${CI_REGISTRY_IMAGE}:${DEFAULT_TAG}" - <<'EOF'
      FROM alpine:latest
      CMD ["/bin/sh", "-c", "while echo $(( i += 1));do sleep 5;done"]
      LABEL org.opencontainers.image.source="$CI_PROJECT_URL"
      LABEL org.opencontainers.image.created="$CI_JOB_STARTED_AT"
      LABEL org.opencontainers.image.licenses="MIT"
      LABEL org.opencontainers.image.description="A demo image that shows how to count"
    EOF
  - docker image tag "${CI_REGISTRY_IMAGE}:${DEFAULT_TAG}" "${CI_REGISTRY_IMAGE}:latest"
  - docker image push --all-tags "$CI_REGISTRY_IMAGE"
